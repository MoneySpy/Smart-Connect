version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ems_postgres
    environment:
      POSTGRES_DB: ems_db
      POSTGRES_USER: ems_user
      POSTGRES_PASSWORD: ems_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/database/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - ems_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ems_user -d ems_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Admin Tool
  adminer:
    image: adminer:latest
    container_name: ems_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
    depends_on:
      - postgres
    networks:
      - ems_network
    restart: unless-stopped

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: ems_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ems_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mail Server (for development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ems_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - ems_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ems_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 